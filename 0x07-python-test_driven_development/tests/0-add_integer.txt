Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Check: module docstring:
    >>> m = __import__("0-add_integer").__doc__
    >>> len(m) > 1
    True

Check: function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(f) > 1
    True

Check: regular addition:
    >>> add_integer(3, 3)
    6

Check: positive with negative:
    >>> add_integer(2, -6)
    -4

Check: negative with positive:
    >>> add_integer(-6, 2)
    -4


Check: float with int:
    >>> add_integer(3.1, 3)
    6

Check: int with float:
    >>> add_integer(10, 7.7)
    17

Check: both float:
    >>> add_integer(2.25, 3.3)
    5

Check: passed None:
    >>> add_integer(10, None)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
