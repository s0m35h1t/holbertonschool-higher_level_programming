Importing the function from the module:
	>>> print_square = __import__("4-print_square").print_square

Check: for module docstring:
	>>> m = __import__("4-print_square").__doc__
	>>> len(m) > 1
	True

Check: function docstring:
	>>> f = __import__("4-print_square").print_square.__doc__
	>>> len(f) > 1
	True

Check: no args:
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'

Check: too many args
	>>> print_square(1, 2)
	Traceback (most recent call last):
	...
	TypeError: print_square() takes 1 positional argument but 2 were given

Check: passing None:
	>>> print_square(None)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Check: positive ints:
	>>> print_square(4)
	####
	####
	####
	####
	>>> print_square(2)
	##
	##
Check: positive ints:
	>>> print_square(0)
	>>> print_square(1)
	#
Check: negative size:
	>>> print_square(-1)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Check: tuple types:
	>>> print_square((1,))
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square("3")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square(True)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Check: float number types:
	>>> print_square(1.0)
	#
	>>> print_square(-1.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
