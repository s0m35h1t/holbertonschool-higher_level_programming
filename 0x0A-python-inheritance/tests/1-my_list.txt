Importing the function from the module:
    >>> MyList = __import__("1-my_list").MyList

check: module docstring:
    >>> m = __import__("1-my_list").__doc__
    >>> len(m) > 1
    True

check: class docstring:
    >>> c = __import__("1-my_list").MyList.__doc__
    >>> len(c) > 1
    True

check: method docstring:
    >>> meth = __import__("1-my_list").MyList.print_sorted.__doc__
    >>> len(meth) > 1
    True

check: MyList inherits from list:
    >>> issubclass(MyList, list)
    True

check: empty list:
    >>> l = MyList()
    >>> l.print_sorted()
    []

check: polindrome list:
    >>> l = MyList()
    >>> l.append(4)
    >>> l.append(3)
    >>> l.append(2)
    >>> l.append(3)
    >>> l.append(4)
    >>> l.print_sorted()
    [2, 3, 3, 4, 4]

check: append new element:
    >>> l = MyList()
    >>> l.append(1)
    >>> l.append(2)
    >>> print(l)
    [1, 2]

check: list already in correct order:
    >>> l.print_sorted()
    [1, 2]

check: descendant order list:
    >>> l = MyList()
    >>> l.append(4)
    >>> l.append(3)
    >>> l.append(2)
    >>> l.append(1)
    >>> print(l)
    [4, 3, 2, 1]
    >>> l.print_sorted()
    [1, 2, 3, 4]
    >>> print(l)
    [4, 3, 2, 1]

check: one negative number:
    >>> l = MyList()
    >>> l.append(-1)
    >>> l.append(5)
    >>> print(l)
    [-1, 5]
    >>> l.print_sorted()
    [-1, 5]
    >>> print(l)
    [-1, 5]

check: all negative numbers:
    >>> l = MyList()
    >>> l.append(-1)
    >>> l.append(-2)
    >>> l.append(-3)
    >>> l.append(-4)
    >>> l.append(0)
    >>> print(l)
    [-1, -2, -3, -4, 0]
    >>> l.print_sorted()
    [-4, -3, -2, -1, 0]
    >>> print(l)
    [-1, -2, -3, -4, 0]

check: too many arguments:
    >>> l.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
